From 3391aaaf3897d64f66a056dd35cccedf1fb2b11e Mon Sep 17 00:00:00 2001
From: William Horvath <william@horvath.blog>
Date: Wed, 11 Jun 2025 08:38:56 -0700
Subject: [PATCH] add a preferFFmpeg option to Wav/WavStream ctors (mostly for
 debugging)

 - also properly error out from WavStream::loadmp3
---
 include/soloud_wav.h                     |  3 +-
 include/soloud_wavstream.h               |  6 ++--
 src/audiosource/wav/soloud_wav.cpp       | 11 ++++++--
 src/audiosource/wav/soloud_wavstream.cpp | 36 ++++++++++++++++++++++--
 4 files changed, 48 insertions(+), 8 deletions(-)

diff --git a/include/soloud_wav.h b/include/soloud_wav.h
index 7d7735d..6fc308f 100755
--- a/include/soloud_wav.h
+++ b/include/soloud_wav.h
@@ -56,11 +56,12 @@ class Wav : public AudioSource
 	result loadffmpeg(MemoryFile *aReader);
 	result testAndLoadFile(MemoryFile *aReader);
 
+	bool mPreferFFmpeg;
 public:
 	float *mData;
 	unsigned int mSampleCount;
 
-	Wav();
+	Wav(bool preferFFmpeg = false);
 	virtual ~Wav();
 	result load(const char *aFilename);
 	result loadMem(const unsigned char *aMem, unsigned int aLength, bool aCopy = false, bool aTakeOwnership = true);
diff --git a/include/soloud_wavstream.h b/include/soloud_wavstream.h
index ea815b1..7bfcf4d 100644
--- a/include/soloud_wavstream.h
+++ b/include/soloud_wavstream.h
@@ -82,7 +82,8 @@ enum WAVSTREAM_FILETYPE
 	WAVSTREAM_OGG = 1,
 	WAVSTREAM_FLAC = 2,
 	WAVSTREAM_MP3 = 3,
-	WAVSTREAM_FFMPEG = 4
+	WAVSTREAM_FFMPEG = 4,
+	WAVSTREAM_AUTO
 };
 
 class WavStream : public AudioSource
@@ -93,6 +94,7 @@ class WavStream : public AudioSource
 	result loadmp3(File *fp);
 	result loadffmpeg(File *fp);
 
+	bool mPreferFFmpeg;
 public:
 	int mFiletype;
 	char *mFilename;
@@ -104,7 +106,7 @@ public:
 	drmp3_seek_point *mMp3SeekPoints;
 	drmp3_uint32 mMp3SeekPointCount;
 
-	WavStream();
+	WavStream(bool preferFFmpeg = false);
 	virtual ~WavStream();
 	result load(const char *aFilename);
 	result loadMem(const unsigned char *aData, unsigned int aDataLen, bool aCopy = false, bool aTakeOwnership = true);
diff --git a/src/audiosource/wav/soloud_wav.cpp b/src/audiosource/wav/soloud_wav.cpp
index 964d0b8..d48d94d 100755
--- a/src/audiosource/wav/soloud_wav.cpp
+++ b/src/audiosource/wav/soloud_wav.cpp
@@ -82,10 +82,11 @@ bool WavInstance::hasEnded()
 	return 0;
 }
 
-Wav::Wav()
+Wav::Wav(bool preferFFmpeg)
 {
 	mData = NULL;
 	mSampleCount = 0;
+	mPreferFFmpeg = preferFFmpeg;
 }
 
 Wav::~Wav()
@@ -309,6 +310,12 @@ result Wav::testAndLoadFile(MemoryFile *aReader)
 	mData = 0;
 	mSampleCount = 0;
 	mChannels = 1;
+
+	if (mPreferFFmpeg && loadffmpeg(aReader) == SO_NO_ERROR)
+	{
+		return SO_NO_ERROR;
+	}
+
 	int tag = aReader->read32();
 	if (tag == MAKEDWORD('O', 'g', 'g', 'S'))
 	{
@@ -326,7 +333,7 @@ result Wav::testAndLoadFile(MemoryFile *aReader)
 	{
 		return SO_NO_ERROR;
 	}
-	else if (loadffmpeg(aReader) == SO_NO_ERROR)
+	else if (!mPreferFFmpeg && loadffmpeg(aReader) == SO_NO_ERROR)
 	{
 		return SO_NO_ERROR;
 	}
diff --git a/src/audiosource/wav/soloud_wavstream.cpp b/src/audiosource/wav/soloud_wavstream.cpp
index 06542ac..49dfcfb 100644
--- a/src/audiosource/wav/soloud_wavstream.cpp
+++ b/src/audiosource/wav/soloud_wavstream.cpp
@@ -499,7 +499,7 @@ bool WavStreamInstance::hasEnded()
 	return 0;
 }
 
-WavStream::WavStream()
+WavStream::WavStream(bool preferFFmpeg)
 {
 	mFilename = 0;
 	mSampleCount = 0;
@@ -508,6 +508,7 @@ WavStream::WavStream()
 	mStreamFile = 0;
 	mMp3SeekPoints = nullptr;
 	mMp3SeekPointCount = 0;
+	mPreferFFmpeg = preferFFmpeg;
 }
 
 WavStream::~WavStream()
@@ -603,6 +604,29 @@ result WavStream::loadmp3(File *fp)
 
 	drmp3_uint64 samples = drmp3_get_pcm_frame_count(&decoder);
 
+	if (!samples)
+	{
+		drmp3_uninit(&decoder);
+		return FILE_LOAD_FAILED;
+	}
+
+	// validate by trying to decode a couple (2) frames, so that we can actually report an error and fall back to ffmpeg if it fails
+	float temp_buffer[2304 * 2];
+	drmp3_seek_to_pcm_frame(&decoder, 0);
+
+	int successful_frames = 0;
+	for (int i = 0; i < 2; i++)
+	{
+		if (drmp3_read_pcm_frames_f32(&decoder, 1152, &temp_buffer[0]) > 0)
+			successful_frames++;
+	}
+
+	if (successful_frames < 2)
+	{
+		drmp3_uninit(&decoder);
+		return FILE_LOAD_FAILED;
+	}
+
 	mBaseSamplerate = (float)decoder.sampleRate;
 	mSampleCount = (unsigned int)samples;
 	mFiletype = WAVSTREAM_MP3;
@@ -803,8 +827,14 @@ result WavStream::loadFileToMem(File *aFile)
 
 result WavStream::parse(File *aFile)
 {
-	int tag = aFile->read32();
+	if (mPreferFFmpeg && loadffmpeg(aFile) == SO_NO_ERROR)
+	{
+		return SO_NO_ERROR;
+	}
+
 	int res = SO_NO_ERROR;
+	int tag = aFile->read32();
+
 	if (tag == MAKEDWORD('O', 'g', 'g', 'S'))
 	{
 		res = loadogg(aFile);
@@ -821,7 +851,7 @@ result WavStream::parse(File *aFile)
 	{
 		res = SO_NO_ERROR;
 	}
-	else if (loadffmpeg(aFile) == SO_NO_ERROR)
+	else if (!mPreferFFmpeg && loadffmpeg(aFile) == SO_NO_ERROR)
 	{
 		res = SO_NO_ERROR;
 	}
-- 
2.49.0

